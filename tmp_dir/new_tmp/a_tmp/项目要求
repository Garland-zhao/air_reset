用户中心

auth_uri = https://kc-server/auth/realms/{realm}/protocol/openid-connect/auth?client_id={client}&redirect_uri=https://.com/firp/oidc_callback&scope=openid+email+profile&access_type=offline&response_type=code&state={加密后的origin_path}&openid.realm={realm}
callback_uri = https://.com/firp/oidc_callback?state={加密后的origin_path}&session_state=005e29e6-1f6f-4969-88c7-5bc982a2470b&code=f83021fc-6045-4078-90e0-9fd3ae434732.005e29e6-1f6f-4969-88c7-5bc982a2470b.a4b22a7e-53e1-4bd0-9fe1-f39e2c294f10

    Flask
    login
    sign + token
    token auth
    access
    backend register tool

待完成:
    attr
    权限校验
    用户信息
    import keycloak 上传 json配置, 增量还是覆盖, group:{group: group}, role card option

测试环境上sql信息  (安装命令 $sudo apt-get install mysql-server mysql-client)
    $ sudo cat /etc/mysql/debian.cnf

    [client]
    host     = localhost
    user     = debian-sys-maint
    password = A4GhEqkRb8sY26he
    socket   = /var/run/mysqld/mysqld.sock
    [mysql_upgrade]
    host     = localhost
    user     = debian-sys-maint
    password = A4GhEqkRb8sY26he
    socket   = /var/run/mysqld/mysqld.sock


########### learn flask_restplus ####################
flask_restplus response
    return data_dict, status_code, headers_dict
        or
    return {'code': 200, 'msg': 'ok', 'data': {}}


如果一个请求不符合你的应用程序的任何端点，
Flask-RESTPlus将返回一个404错误消息，
并建议其他与请求的端点密切匹配的端点。
这可以通过在你的应用配置中把ERROR_404_HELP设置为False来禁用。

用strict=True调用parse_args()
可以确保在请求中包含你的分析器没有定义的参数时抛出一个错误。
args = parser.parse_args(strict=True)


from flask_restplus import fields  #这个模块没看懂


# 对于参数获取的来源location
# Look only in the POST body
parser.add_argument('name', type=int, location='form')
# Look only in the querystring
parser.add_argument('PageSize', type=int, location='args')
# From the request headers
parser.add_argument('User-Agent', location='headers')
# From http cookies
parser.add_argument('session_id', location='cookies')
# From file uploads
parser.add_argument('picture', type=werkzeug.datastructures.FileStorage, location='files')


现在能够使用的 只有一个环境： 测试环境也是线上环境
对应的前端keycloak配置：
    uri: https://www.deepredai.com/auth
    realm: master
    client_id: firp
    无需设置client_secret

然后访问firp的地址：
    开VPN: http://172.19.18.141:50010/
    关VPN: http://8.130.16.215:50010/
    example:
        重仓实时数据：
            http://172.19.18.141:50010/api/v1/firp/fund_research/performance_analysis/heavily_held_fund?fund_code=002001.OF


线上环境172.19.18.141已部署最新master代码: FIRP--v20220129.01   AC--v20220129.02
配置'header': card 到 Access-Control-Allow-Headers
配置 skip_auth_method: 'OPTIONS', debug日志开启
后端接口共7个：
    1 基金重仓实时数据
    2 实时估值
    3 历史估值曲线
    4 基金模糊搜索
    5 行业配置
    6 行业配置时序图
    7 行业配置集中时序图
除'实时估值'redis暂无数据外，其他接口均有返回值，在正确携带token和card下访问正常


投研平台：https://www.deepredai.com
用户名：firp
密码：1234



后端问题:
  allow_header 是否需要全部放开?

tmux 开发+vim

supervisor

git branch name '_' eg: fix_user_api

pytest -k "xxxtest"



相似基金:
    默认给一个基金

    白名单内容找不到相似的基金, 返回报错:白名单过小, 是否全基金检索?
        初选结果作为白名单放入ClickHouse
        相似性查找暂定为"实时计算"
            收益率序列? one_fund or fund_group
        白名单在其他目录下创建, 此处调用

    行业 计算日期的行业, SW行业

疑问:
    生成只数是什么意思?
    白名单做成接口吗?	or 直接fund_info表全量返回fund_code


    A03返回的内容:
     01  '权重是生成完组合的时候自动返回的吗? or 需要如何计算?'
     02  '组合行业分析--用生成组合的日期当天进行穿透即可??' 这个和最近一期披露有什么不同??
     03  '验证和回测区间如何做?'-- 曲线图数据, 表格数据





相似性: 收益率曲线相似

port: 组合
ret: 收益



